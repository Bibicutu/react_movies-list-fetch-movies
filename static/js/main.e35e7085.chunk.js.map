{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","searchText","setSearchText","notFound","setNotFound","setMovie","searchButtonText","setSearchButtonText","isLoading","setIsLoading","searchTextHandler","useCallback","event","target","value","submitSearchHandler","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","response","newMovie","Title","Plot","Poster","imdbID","handleAddMovie","onSubmit","htmlFor","type","id","onChange","placeholder","classNames","disabled","onClick","App","setMovies","undefined","find","previousListOfMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,iDCCNC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcoB,EAAd,KACA,EAAgDL,mBAAS,gBAAzD,mBAAOM,EAAP,KAAyBC,EAAzB,KACA,EAAkCP,oBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEMC,EAAoBC,uBAAY,SAACC,GACrCV,EAAcU,EAAMC,OAAOC,OAEvBX,GACFC,GAAY,KAEb,CAACD,IAEEY,EAAsBJ,sBAAW,uCAAC,WAAOC,GAAP,iBAAAI,EAAA,6DACtCJ,EAAMK,iBACNR,GAAa,GAFyB,SCxBjBS,ED4BWjB,EC3B3BkB,MAAM,GAAD,OAHE,0CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDmB6B,YAMlC,UAFEC,EAJgC,iCAOpCtB,GAAY,GACZC,EAAS,MACTI,GAAa,GATuB,2BAchCkB,EAAW,CACfrC,MAAOoC,EAASE,MAChBrC,YAAamC,EAASG,KACtBzC,OAA6B,QAApBsC,EAASI,OACd,4DACAJ,EAASI,OACbrC,QAAQ,8BAAD,OAAgCiC,EAASK,QAChDlC,OAAQ6B,EAASK,QAGnB1B,EAASsB,GACTpB,EAAoB,gBACpBE,GAAa,GA1ByB,kCCxBnC,IAAkBS,IDwBiB,OAAD,sDA2BpC,CAACjB,EAAYhB,IAEV+C,EAAiBrB,uBAAY,WACnB,OAAV1B,GACFc,EAASd,GAGXiB,EAAc,IACdK,EAAoB,gBACpBF,EAAS,QACR,CAACpB,IAEJ,OACE,qCACE,uBACEC,UAAU,aACV+C,SAAUlB,EAFZ,UAIE,sBAAK7B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgD,QAAQ,cAAjC,yBAIA,qBAAKhD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRiD,KAAK,OACLC,GAAG,cACHtB,MAAOb,EACPoC,SAAU3B,EACV4B,YAAY,0BACZpD,UAAU,sBAIbiB,GACC,mBAAGjB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRiD,KAAK,SACLjD,UAAWqD,IACT,SACA,WACA,CAAE,aAAc/B,IAElBgC,UAAWvC,EARb,SAUGK,MAIL,qBAAKpB,UAAU,UAAf,SACGD,GACC,wBACE,UAAQ,YACRkD,KAAK,SACLjD,UAAU,oBACVuD,QAAST,EAJX,qCAaP/C,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WE/HfyD,EAAM,WACjB,MAA4B1C,mBAAkB,IAA9C,mBAAOL,EAAP,KAAegD,EAAf,KAEM5C,EAAWY,uBAAY,SAACgB,QACmCiB,IAA3DjD,EAAOkD,MAAK,SAAA5D,GAAK,OAAIA,EAAMY,SAAW8B,EAAS9B,WACjD8C,GAAU,SAACG,GAAD,4BACLA,GADK,CAERnB,SAGH,CAAChC,IAEJ,OACE,sBAAKT,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWa,SAAUA,UCrB7BgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e35e7085.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, {\n  FormEvent,\n  useCallback,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [searchText, setSearchText] = useState('');\n  const [notFound, setNotFound] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [searchButtonText, setSearchButtonText] = useState('Find a movie');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchTextHandler = useCallback((event) => {\n    setSearchText(event.target.value);\n\n    if (notFound) {\n      setNotFound(false);\n    }\n  }, [notFound]);\n\n  const submitSearchHandler = useCallback(async (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const response = await getMovie(searchText);\n\n    if ('Error' in response) {\n      setNotFound(true);\n      setMovie(null);\n      setIsLoading(false);\n\n      return;\n    }\n\n    const newMovie = {\n      title: response.Title,\n      description: response.Plot,\n      imgUrl: (response.Poster === 'N/A')\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : response.Poster,\n      imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n      imdbId: response.imdbID,\n    };\n\n    setMovie(newMovie);\n    setSearchButtonText('Search again');\n    setIsLoading(false);\n  }, [searchText, movie]);\n\n  const handleAddMovie = useCallback(() => {\n    if (movie !== null) {\n      addMovie(movie);\n    }\n\n    setSearchText('');\n    setSearchButtonText('Find a movie');\n    setMovie(null);\n  }, [movie]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitSearchHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={searchText}\n              onChange={searchTextHandler}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!searchText}\n            >\n              {searchButtonText}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\n// const API_URL = 'https://www.omdbapi.com/?apikey=9f9df241';\nconst API_URL = 'http://www.omdbapi.com/?apikey=9f9df241';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId) === undefined) {\n      setMovies((previousListOfMovies) => ([\n        ...previousListOfMovies,\n        newMovie,\n      ]));\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}